                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module getput
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _printf
                                     12 	.globl _TF1
                                     13 	.globl _TR1
                                     14 	.globl _TF0
                                     15 	.globl _TR0
                                     16 	.globl _IE1
                                     17 	.globl _IT1
                                     18 	.globl _IE0
                                     19 	.globl _IT0
                                     20 	.globl _SM0
                                     21 	.globl _SM1
                                     22 	.globl _SM2
                                     23 	.globl _REN
                                     24 	.globl _TB8
                                     25 	.globl _RB8
                                     26 	.globl _TI
                                     27 	.globl _RI
                                     28 	.globl _CY
                                     29 	.globl _AC
                                     30 	.globl _F0
                                     31 	.globl _RS1
                                     32 	.globl _RS0
                                     33 	.globl _OV
                                     34 	.globl _F1
                                     35 	.globl _P
                                     36 	.globl _RD
                                     37 	.globl _WR
                                     38 	.globl _T1
                                     39 	.globl _T0
                                     40 	.globl _INT1
                                     41 	.globl _INT0
                                     42 	.globl _TXD0
                                     43 	.globl _TXD
                                     44 	.globl _RXD0
                                     45 	.globl _RXD
                                     46 	.globl _P3_7
                                     47 	.globl _P3_6
                                     48 	.globl _P3_5
                                     49 	.globl _P3_4
                                     50 	.globl _P3_3
                                     51 	.globl _P3_2
                                     52 	.globl _P3_1
                                     53 	.globl _P3_0
                                     54 	.globl _P2_7
                                     55 	.globl _P2_6
                                     56 	.globl _P2_5
                                     57 	.globl _P2_4
                                     58 	.globl _P2_3
                                     59 	.globl _P2_2
                                     60 	.globl _P2_1
                                     61 	.globl _P2_0
                                     62 	.globl _P1_7
                                     63 	.globl _P1_6
                                     64 	.globl _P1_5
                                     65 	.globl _P1_4
                                     66 	.globl _P1_3
                                     67 	.globl _P1_2
                                     68 	.globl _P1_1
                                     69 	.globl _P1_0
                                     70 	.globl _P0_7
                                     71 	.globl _P0_6
                                     72 	.globl _P0_5
                                     73 	.globl _P0_4
                                     74 	.globl _P0_3
                                     75 	.globl _P0_2
                                     76 	.globl _P0_1
                                     77 	.globl _P0_0
                                     78 	.globl _PS
                                     79 	.globl _PT1
                                     80 	.globl _PX1
                                     81 	.globl _PT0
                                     82 	.globl _PX0
                                     83 	.globl _EA
                                     84 	.globl _ES
                                     85 	.globl _ET1
                                     86 	.globl _EX1
                                     87 	.globl _ET0
                                     88 	.globl _EX0
                                     89 	.globl _BREG_F7
                                     90 	.globl _BREG_F6
                                     91 	.globl _BREG_F5
                                     92 	.globl _BREG_F4
                                     93 	.globl _BREG_F3
                                     94 	.globl _BREG_F2
                                     95 	.globl _BREG_F1
                                     96 	.globl _BREG_F0
                                     97 	.globl _P5_7
                                     98 	.globl _P5_6
                                     99 	.globl _P5_5
                                    100 	.globl _P5_4
                                    101 	.globl _P5_3
                                    102 	.globl _P5_2
                                    103 	.globl _P5_1
                                    104 	.globl _P5_0
                                    105 	.globl _P4_7
                                    106 	.globl _P4_6
                                    107 	.globl _P4_5
                                    108 	.globl _P4_4
                                    109 	.globl _P4_3
                                    110 	.globl _P4_2
                                    111 	.globl _P4_1
                                    112 	.globl _P4_0
                                    113 	.globl _PX0L
                                    114 	.globl _PT0L
                                    115 	.globl _PX1L
                                    116 	.globl _PT1L
                                    117 	.globl _PSL
                                    118 	.globl _PT2L
                                    119 	.globl _PPCL
                                    120 	.globl _EC
                                    121 	.globl _CCF0
                                    122 	.globl _CCF1
                                    123 	.globl _CCF2
                                    124 	.globl _CCF3
                                    125 	.globl _CCF4
                                    126 	.globl _CR
                                    127 	.globl _CF
                                    128 	.globl _TF2
                                    129 	.globl _EXF2
                                    130 	.globl _RCLK
                                    131 	.globl _TCLK
                                    132 	.globl _EXEN2
                                    133 	.globl _TR2
                                    134 	.globl _C_T2
                                    135 	.globl _CP_RL2
                                    136 	.globl _T2CON_7
                                    137 	.globl _T2CON_6
                                    138 	.globl _T2CON_5
                                    139 	.globl _T2CON_4
                                    140 	.globl _T2CON_3
                                    141 	.globl _T2CON_2
                                    142 	.globl _T2CON_1
                                    143 	.globl _T2CON_0
                                    144 	.globl _PT2
                                    145 	.globl _ET2
                                    146 	.globl _TMOD
                                    147 	.globl _TL1
                                    148 	.globl _TL0
                                    149 	.globl _TH1
                                    150 	.globl _TH0
                                    151 	.globl _TCON
                                    152 	.globl _SP
                                    153 	.globl _SCON
                                    154 	.globl _SBUF0
                                    155 	.globl _SBUF
                                    156 	.globl _PSW
                                    157 	.globl _PCON
                                    158 	.globl _P3
                                    159 	.globl _P2
                                    160 	.globl _P1
                                    161 	.globl _P0
                                    162 	.globl _IP
                                    163 	.globl _IE
                                    164 	.globl _DP0L
                                    165 	.globl _DPL
                                    166 	.globl _DP0H
                                    167 	.globl _DPH
                                    168 	.globl _B
                                    169 	.globl _ACC
                                    170 	.globl _EECON
                                    171 	.globl _KBF
                                    172 	.globl _KBE
                                    173 	.globl _KBLS
                                    174 	.globl _BRL
                                    175 	.globl _BDRCON
                                    176 	.globl _T2MOD
                                    177 	.globl _SPDAT
                                    178 	.globl _SPSTA
                                    179 	.globl _SPCON
                                    180 	.globl _SADEN
                                    181 	.globl _SADDR
                                    182 	.globl _WDTPRG
                                    183 	.globl _WDTRST
                                    184 	.globl _P5
                                    185 	.globl _P4
                                    186 	.globl _IPH1
                                    187 	.globl _IPL1
                                    188 	.globl _IPH0
                                    189 	.globl _IPL0
                                    190 	.globl _IEN1
                                    191 	.globl _IEN0
                                    192 	.globl _CMOD
                                    193 	.globl _CL
                                    194 	.globl _CH
                                    195 	.globl _CCON
                                    196 	.globl _CCAPM4
                                    197 	.globl _CCAPM3
                                    198 	.globl _CCAPM2
                                    199 	.globl _CCAPM1
                                    200 	.globl _CCAPM0
                                    201 	.globl _CCAP4L
                                    202 	.globl _CCAP3L
                                    203 	.globl _CCAP2L
                                    204 	.globl _CCAP1L
                                    205 	.globl _CCAP0L
                                    206 	.globl _CCAP4H
                                    207 	.globl _CCAP3H
                                    208 	.globl _CCAP2H
                                    209 	.globl _CCAP1H
                                    210 	.globl _CCAP0H
                                    211 	.globl _CKCON1
                                    212 	.globl _CKCON0
                                    213 	.globl _CKRL
                                    214 	.globl _AUXR1
                                    215 	.globl _AUXR
                                    216 	.globl _TH2
                                    217 	.globl _TL2
                                    218 	.globl _RCAP2H
                                    219 	.globl _RCAP2L
                                    220 	.globl _T2CON
                                    221 	.globl _get_number
                                    222 	.globl _get_num_helper
                                    223 	.globl _putchar
                                    224 	.globl _getchar
                                    225 ;--------------------------------------------------------
                                    226 ; special function registers
                                    227 ;--------------------------------------------------------
                                    228 	.area RSEG    (ABS,DATA)
      000000                        229 	.org 0x0000
                           0000C8   230 _T2CON	=	0x00c8
                           0000CA   231 _RCAP2L	=	0x00ca
                           0000CB   232 _RCAP2H	=	0x00cb
                           0000CC   233 _TL2	=	0x00cc
                           0000CD   234 _TH2	=	0x00cd
                           00008E   235 _AUXR	=	0x008e
                           0000A2   236 _AUXR1	=	0x00a2
                           000097   237 _CKRL	=	0x0097
                           00008F   238 _CKCON0	=	0x008f
                           0000AF   239 _CKCON1	=	0x00af
                           0000FA   240 _CCAP0H	=	0x00fa
                           0000FB   241 _CCAP1H	=	0x00fb
                           0000FC   242 _CCAP2H	=	0x00fc
                           0000FD   243 _CCAP3H	=	0x00fd
                           0000FE   244 _CCAP4H	=	0x00fe
                           0000EA   245 _CCAP0L	=	0x00ea
                           0000EB   246 _CCAP1L	=	0x00eb
                           0000EC   247 _CCAP2L	=	0x00ec
                           0000ED   248 _CCAP3L	=	0x00ed
                           0000EE   249 _CCAP4L	=	0x00ee
                           0000DA   250 _CCAPM0	=	0x00da
                           0000DB   251 _CCAPM1	=	0x00db
                           0000DC   252 _CCAPM2	=	0x00dc
                           0000DD   253 _CCAPM3	=	0x00dd
                           0000DE   254 _CCAPM4	=	0x00de
                           0000D8   255 _CCON	=	0x00d8
                           0000F9   256 _CH	=	0x00f9
                           0000E9   257 _CL	=	0x00e9
                           0000D9   258 _CMOD	=	0x00d9
                           0000A8   259 _IEN0	=	0x00a8
                           0000B1   260 _IEN1	=	0x00b1
                           0000B8   261 _IPL0	=	0x00b8
                           0000B7   262 _IPH0	=	0x00b7
                           0000B2   263 _IPL1	=	0x00b2
                           0000B3   264 _IPH1	=	0x00b3
                           0000C0   265 _P4	=	0x00c0
                           0000E8   266 _P5	=	0x00e8
                           0000A6   267 _WDTRST	=	0x00a6
                           0000A7   268 _WDTPRG	=	0x00a7
                           0000A9   269 _SADDR	=	0x00a9
                           0000B9   270 _SADEN	=	0x00b9
                           0000C3   271 _SPCON	=	0x00c3
                           0000C4   272 _SPSTA	=	0x00c4
                           0000C5   273 _SPDAT	=	0x00c5
                           0000C9   274 _T2MOD	=	0x00c9
                           00009B   275 _BDRCON	=	0x009b
                           00009A   276 _BRL	=	0x009a
                           00009C   277 _KBLS	=	0x009c
                           00009D   278 _KBE	=	0x009d
                           00009E   279 _KBF	=	0x009e
                           0000D2   280 _EECON	=	0x00d2
                           0000E0   281 _ACC	=	0x00e0
                           0000F0   282 _B	=	0x00f0
                           000083   283 _DPH	=	0x0083
                           000083   284 _DP0H	=	0x0083
                           000082   285 _DPL	=	0x0082
                           000082   286 _DP0L	=	0x0082
                           0000A8   287 _IE	=	0x00a8
                           0000B8   288 _IP	=	0x00b8
                           000080   289 _P0	=	0x0080
                           000090   290 _P1	=	0x0090
                           0000A0   291 _P2	=	0x00a0
                           0000B0   292 _P3	=	0x00b0
                           000087   293 _PCON	=	0x0087
                           0000D0   294 _PSW	=	0x00d0
                           000099   295 _SBUF	=	0x0099
                           000099   296 _SBUF0	=	0x0099
                           000098   297 _SCON	=	0x0098
                           000081   298 _SP	=	0x0081
                           000088   299 _TCON	=	0x0088
                           00008C   300 _TH0	=	0x008c
                           00008D   301 _TH1	=	0x008d
                           00008A   302 _TL0	=	0x008a
                           00008B   303 _TL1	=	0x008b
                           000089   304 _TMOD	=	0x0089
                                    305 ;--------------------------------------------------------
                                    306 ; special function bits
                                    307 ;--------------------------------------------------------
                                    308 	.area RSEG    (ABS,DATA)
      000000                        309 	.org 0x0000
                           0000AD   310 _ET2	=	0x00ad
                           0000BD   311 _PT2	=	0x00bd
                           0000C8   312 _T2CON_0	=	0x00c8
                           0000C9   313 _T2CON_1	=	0x00c9
                           0000CA   314 _T2CON_2	=	0x00ca
                           0000CB   315 _T2CON_3	=	0x00cb
                           0000CC   316 _T2CON_4	=	0x00cc
                           0000CD   317 _T2CON_5	=	0x00cd
                           0000CE   318 _T2CON_6	=	0x00ce
                           0000CF   319 _T2CON_7	=	0x00cf
                           0000C8   320 _CP_RL2	=	0x00c8
                           0000C9   321 _C_T2	=	0x00c9
                           0000CA   322 _TR2	=	0x00ca
                           0000CB   323 _EXEN2	=	0x00cb
                           0000CC   324 _TCLK	=	0x00cc
                           0000CD   325 _RCLK	=	0x00cd
                           0000CE   326 _EXF2	=	0x00ce
                           0000CF   327 _TF2	=	0x00cf
                           0000DF   328 _CF	=	0x00df
                           0000DE   329 _CR	=	0x00de
                           0000DC   330 _CCF4	=	0x00dc
                           0000DB   331 _CCF3	=	0x00db
                           0000DA   332 _CCF2	=	0x00da
                           0000D9   333 _CCF1	=	0x00d9
                           0000D8   334 _CCF0	=	0x00d8
                           0000AE   335 _EC	=	0x00ae
                           0000BE   336 _PPCL	=	0x00be
                           0000BD   337 _PT2L	=	0x00bd
                           0000BC   338 _PSL	=	0x00bc
                           0000BB   339 _PT1L	=	0x00bb
                           0000BA   340 _PX1L	=	0x00ba
                           0000B9   341 _PT0L	=	0x00b9
                           0000B8   342 _PX0L	=	0x00b8
                           0000C0   343 _P4_0	=	0x00c0
                           0000C1   344 _P4_1	=	0x00c1
                           0000C2   345 _P4_2	=	0x00c2
                           0000C3   346 _P4_3	=	0x00c3
                           0000C4   347 _P4_4	=	0x00c4
                           0000C5   348 _P4_5	=	0x00c5
                           0000C6   349 _P4_6	=	0x00c6
                           0000C7   350 _P4_7	=	0x00c7
                           0000E8   351 _P5_0	=	0x00e8
                           0000E9   352 _P5_1	=	0x00e9
                           0000EA   353 _P5_2	=	0x00ea
                           0000EB   354 _P5_3	=	0x00eb
                           0000EC   355 _P5_4	=	0x00ec
                           0000ED   356 _P5_5	=	0x00ed
                           0000EE   357 _P5_6	=	0x00ee
                           0000EF   358 _P5_7	=	0x00ef
                           0000F0   359 _BREG_F0	=	0x00f0
                           0000F1   360 _BREG_F1	=	0x00f1
                           0000F2   361 _BREG_F2	=	0x00f2
                           0000F3   362 _BREG_F3	=	0x00f3
                           0000F4   363 _BREG_F4	=	0x00f4
                           0000F5   364 _BREG_F5	=	0x00f5
                           0000F6   365 _BREG_F6	=	0x00f6
                           0000F7   366 _BREG_F7	=	0x00f7
                           0000A8   367 _EX0	=	0x00a8
                           0000A9   368 _ET0	=	0x00a9
                           0000AA   369 _EX1	=	0x00aa
                           0000AB   370 _ET1	=	0x00ab
                           0000AC   371 _ES	=	0x00ac
                           0000AF   372 _EA	=	0x00af
                           0000B8   373 _PX0	=	0x00b8
                           0000B9   374 _PT0	=	0x00b9
                           0000BA   375 _PX1	=	0x00ba
                           0000BB   376 _PT1	=	0x00bb
                           0000BC   377 _PS	=	0x00bc
                           000080   378 _P0_0	=	0x0080
                           000081   379 _P0_1	=	0x0081
                           000082   380 _P0_2	=	0x0082
                           000083   381 _P0_3	=	0x0083
                           000084   382 _P0_4	=	0x0084
                           000085   383 _P0_5	=	0x0085
                           000086   384 _P0_6	=	0x0086
                           000087   385 _P0_7	=	0x0087
                           000090   386 _P1_0	=	0x0090
                           000091   387 _P1_1	=	0x0091
                           000092   388 _P1_2	=	0x0092
                           000093   389 _P1_3	=	0x0093
                           000094   390 _P1_4	=	0x0094
                           000095   391 _P1_5	=	0x0095
                           000096   392 _P1_6	=	0x0096
                           000097   393 _P1_7	=	0x0097
                           0000A0   394 _P2_0	=	0x00a0
                           0000A1   395 _P2_1	=	0x00a1
                           0000A2   396 _P2_2	=	0x00a2
                           0000A3   397 _P2_3	=	0x00a3
                           0000A4   398 _P2_4	=	0x00a4
                           0000A5   399 _P2_5	=	0x00a5
                           0000A6   400 _P2_6	=	0x00a6
                           0000A7   401 _P2_7	=	0x00a7
                           0000B0   402 _P3_0	=	0x00b0
                           0000B1   403 _P3_1	=	0x00b1
                           0000B2   404 _P3_2	=	0x00b2
                           0000B3   405 _P3_3	=	0x00b3
                           0000B4   406 _P3_4	=	0x00b4
                           0000B5   407 _P3_5	=	0x00b5
                           0000B6   408 _P3_6	=	0x00b6
                           0000B7   409 _P3_7	=	0x00b7
                           0000B0   410 _RXD	=	0x00b0
                           0000B0   411 _RXD0	=	0x00b0
                           0000B1   412 _TXD	=	0x00b1
                           0000B1   413 _TXD0	=	0x00b1
                           0000B2   414 _INT0	=	0x00b2
                           0000B3   415 _INT1	=	0x00b3
                           0000B4   416 _T0	=	0x00b4
                           0000B5   417 _T1	=	0x00b5
                           0000B6   418 _WR	=	0x00b6
                           0000B7   419 _RD	=	0x00b7
                           0000D0   420 _P	=	0x00d0
                           0000D1   421 _F1	=	0x00d1
                           0000D2   422 _OV	=	0x00d2
                           0000D3   423 _RS0	=	0x00d3
                           0000D4   424 _RS1	=	0x00d4
                           0000D5   425 _F0	=	0x00d5
                           0000D6   426 _AC	=	0x00d6
                           0000D7   427 _CY	=	0x00d7
                           000098   428 _RI	=	0x0098
                           000099   429 _TI	=	0x0099
                           00009A   430 _RB8	=	0x009a
                           00009B   431 _TB8	=	0x009b
                           00009C   432 _REN	=	0x009c
                           00009D   433 _SM2	=	0x009d
                           00009E   434 _SM1	=	0x009e
                           00009F   435 _SM0	=	0x009f
                           000088   436 _IT0	=	0x0088
                           000089   437 _IE0	=	0x0089
                           00008A   438 _IT1	=	0x008a
                           00008B   439 _IE1	=	0x008b
                           00008C   440 _TR0	=	0x008c
                           00008D   441 _TF0	=	0x008d
                           00008E   442 _TR1	=	0x008e
                           00008F   443 _TF1	=	0x008f
                                    444 ;--------------------------------------------------------
                                    445 ; overlayable register banks
                                    446 ;--------------------------------------------------------
                                    447 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        448 	.ds 8
                                    449 ;--------------------------------------------------------
                                    450 ; internal ram data
                                    451 ;--------------------------------------------------------
                                    452 	.area DSEG    (DATA)
                                    453 ;--------------------------------------------------------
                                    454 ; overlayable items in internal ram 
                                    455 ;--------------------------------------------------------
                                    456 ;--------------------------------------------------------
                                    457 ; indirectly addressable internal ram data
                                    458 ;--------------------------------------------------------
                                    459 	.area ISEG    (DATA)
                                    460 ;--------------------------------------------------------
                                    461 ; absolute internal ram data
                                    462 ;--------------------------------------------------------
                                    463 	.area IABS    (ABS,DATA)
                                    464 	.area IABS    (ABS,DATA)
                                    465 ;--------------------------------------------------------
                                    466 ; bit data
                                    467 ;--------------------------------------------------------
                                    468 	.area BSEG    (BIT)
                                    469 ;--------------------------------------------------------
                                    470 ; paged external ram data
                                    471 ;--------------------------------------------------------
                                    472 	.area PSEG    (PAG,XDATA)
                                    473 ;--------------------------------------------------------
                                    474 ; external ram data
                                    475 ;--------------------------------------------------------
                                    476 	.area XSEG    (XDATA)
      000000                        477 _get_number_total_chars_65536_46:
      000000                        478 	.ds 2
      000002                        479 _get_number_num_65536_47:
      000002                        480 	.ds 2
      000004                        481 _get_num_helper_times_65536_52:
      000004                        482 	.ds 2
      000006                        483 _get_num_helper_num_65536_53:
      000006                        484 	.ds 2
      000008                        485 _putchar_c_65536_56:
      000008                        486 	.ds 2
                                    487 ;--------------------------------------------------------
                                    488 ; absolute external ram data
                                    489 ;--------------------------------------------------------
                                    490 	.area XABS    (ABS,XDATA)
                                    491 ;--------------------------------------------------------
                                    492 ; external initialized ram data
                                    493 ;--------------------------------------------------------
                                    494 	.area XISEG   (XDATA)
                                    495 	.area HOME    (CODE)
                                    496 	.area GSINIT0 (CODE)
                                    497 	.area GSINIT1 (CODE)
                                    498 	.area GSINIT2 (CODE)
                                    499 	.area GSINIT3 (CODE)
                                    500 	.area GSINIT4 (CODE)
                                    501 	.area GSINIT5 (CODE)
                                    502 	.area GSINIT  (CODE)
                                    503 	.area GSFINAL (CODE)
                                    504 	.area CSEG    (CODE)
                                    505 ;--------------------------------------------------------
                                    506 ; global & static initialisations
                                    507 ;--------------------------------------------------------
                                    508 	.area HOME    (CODE)
                                    509 	.area GSINIT  (CODE)
                                    510 	.area GSFINAL (CODE)
                                    511 	.area GSINIT  (CODE)
                                    512 ;--------------------------------------------------------
                                    513 ; Home
                                    514 ;--------------------------------------------------------
                                    515 	.area HOME    (CODE)
                                    516 	.area HOME    (CODE)
                                    517 ;--------------------------------------------------------
                                    518 ; code
                                    519 ;--------------------------------------------------------
                                    520 	.area CSEG    (CODE)
                                    521 ;------------------------------------------------------------
                                    522 ;Allocation info for local variables in function 'get_number'
                                    523 ;------------------------------------------------------------
                                    524 ;total_chars               Allocated with name '_get_number_total_chars_65536_46'
                                    525 ;rec                       Allocated with name '_get_number_rec_65536_47'
                                    526 ;num                       Allocated with name '_get_number_num_65536_47'
                                    527 ;i                         Allocated with name '_get_number_i_131072_48'
                                    528 ;------------------------------------------------------------
                                    529 ;	getput.c:14: int get_number(int total_chars){    
                                    530 ;	-----------------------------------------
                                    531 ;	 function get_number
                                    532 ;	-----------------------------------------
      000000                        533 _get_number:
                           000007   534 	ar7 = 0x07
                           000006   535 	ar6 = 0x06
                           000005   536 	ar5 = 0x05
                           000004   537 	ar4 = 0x04
                           000003   538 	ar3 = 0x03
                           000002   539 	ar2 = 0x02
                           000001   540 	ar1 = 0x01
                           000000   541 	ar0 = 0x00
      000000 AF 83            [24]  542 	mov	r7,dph
      000002 E5 82            [12]  543 	mov	a,dpl
      000004 90r00r00         [24]  544 	mov	dptr,#_get_number_total_chars_65536_46
      000007 F0               [24]  545 	movx	@dptr,a
      000008 EF               [12]  546 	mov	a,r7
      000009 A3               [24]  547 	inc	dptr
      00000A F0               [24]  548 	movx	@dptr,a
                                    549 ;	getput.c:16: int num = 0;
      00000B 90r00r02         [24]  550 	mov	dptr,#_get_number_num_65536_47
      00000E E4               [12]  551 	clr	a
      00000F F0               [24]  552 	movx	@dptr,a
      000010 A3               [24]  553 	inc	dptr
      000011 F0               [24]  554 	movx	@dptr,a
                                    555 ;	getput.c:17: for (int i = total_chars; i > 0; i--)
      000012 90r00r00         [24]  556 	mov	dptr,#_get_number_total_chars_65536_46
      000015 E0               [24]  557 	movx	a,@dptr
      000016 FE               [12]  558 	mov	r6,a
      000017 A3               [24]  559 	inc	dptr
      000018 E0               [24]  560 	movx	a,@dptr
      000019 FF               [12]  561 	mov	r7,a
      00001A                        562 00107$:
      00001A C3               [12]  563 	clr	c
      00001B E4               [12]  564 	clr	a
      00001C 9E               [12]  565 	subb	a,r6
      00001D 74 80            [12]  566 	mov	a,#(0x00 ^ 0x80)
      00001F 8F F0            [24]  567 	mov	b,r7
      000021 63 F0 80         [24]  568 	xrl	b,#0x80
      000024 95 F0            [12]  569 	subb	a,b
      000026 40 03            [24]  570 	jc	00127$
      000028 02r00rC6         [24]  571 	ljmp	00105$
      00002B                        572 00127$:
                                    573 ;	getput.c:19: rec = getchar();
      00002B C0 07            [24]  574 	push	ar7
      00002D C0 06            [24]  575 	push	ar6
      00002F 12r01r6E         [24]  576 	lcall	_getchar
      000032 AC 82            [24]  577 	mov	r4,dpl
      000034 AD 83            [24]  578 	mov	r5,dph
      000036 D0 06            [24]  579 	pop	ar6
      000038 D0 07            [24]  580 	pop	ar7
                                    581 ;	getput.c:21: if (rec <= 0x39 && rec >= 0x30)
      00003A C3               [12]  582 	clr	c
      00003B 74 39            [12]  583 	mov	a,#0x39
      00003D 9C               [12]  584 	subb	a,r4
      00003E 74 80            [12]  585 	mov	a,#(0x00 ^ 0x80)
      000040 8D F0            [24]  586 	mov	b,r5
      000042 63 F0 80         [24]  587 	xrl	b,#0x80
      000045 95 F0            [12]  588 	subb	a,b
      000047 40 5C            [24]  589 	jc	00102$
      000049 EC               [12]  590 	mov	a,r4
      00004A 94 30            [12]  591 	subb	a,#0x30
      00004C ED               [12]  592 	mov	a,r5
      00004D 64 80            [12]  593 	xrl	a,#0x80
      00004F 94 80            [12]  594 	subb	a,#0x80
      000051 40 52            [24]  595 	jc	00102$
                                    596 ;	getput.c:23: num += ((rec - 0x30) * get_num_helper(i - 1));
      000053 EC               [12]  597 	mov	a,r4
      000054 24 D0            [12]  598 	add	a,#0xd0
      000056 FC               [12]  599 	mov	r4,a
      000057 ED               [12]  600 	mov	a,r5
      000058 34 FF            [12]  601 	addc	a,#0xff
      00005A FD               [12]  602 	mov	r5,a
      00005B EE               [12]  603 	mov	a,r6
      00005C 24 FF            [12]  604 	add	a,#0xff
      00005E FA               [12]  605 	mov	r2,a
      00005F EF               [12]  606 	mov	a,r7
      000060 34 FF            [12]  607 	addc	a,#0xff
      000062 FB               [12]  608 	mov	r3,a
      000063 8A 82            [24]  609 	mov	dpl,r2
      000065 8B 83            [24]  610 	mov	dph,r3
      000067 C0 07            [24]  611 	push	ar7
      000069 C0 06            [24]  612 	push	ar6
      00006B C0 05            [24]  613 	push	ar5
      00006D C0 04            [24]  614 	push	ar4
      00006F 12r00rD2         [24]  615 	lcall	_get_num_helper
      000072 AA 82            [24]  616 	mov	r2,dpl
      000074 AB 83            [24]  617 	mov	r3,dph
      000076 D0 04            [24]  618 	pop	ar4
      000078 D0 05            [24]  619 	pop	ar5
      00007A 90r00r00         [24]  620 	mov	dptr,#__mulint_PARM_2
      00007D EA               [12]  621 	mov	a,r2
      00007E F0               [24]  622 	movx	@dptr,a
      00007F EB               [12]  623 	mov	a,r3
      000080 A3               [24]  624 	inc	dptr
      000081 F0               [24]  625 	movx	@dptr,a
      000082 8C 82            [24]  626 	mov	dpl,r4
      000084 8D 83            [24]  627 	mov	dph,r5
      000086 12r00r00         [24]  628 	lcall	__mulint
      000089 AC 82            [24]  629 	mov	r4,dpl
      00008B AD 83            [24]  630 	mov	r5,dph
      00008D D0 06            [24]  631 	pop	ar6
      00008F D0 07            [24]  632 	pop	ar7
      000091 90r00r02         [24]  633 	mov	dptr,#_get_number_num_65536_47
      000094 E0               [24]  634 	movx	a,@dptr
      000095 FA               [12]  635 	mov	r2,a
      000096 A3               [24]  636 	inc	dptr
      000097 E0               [24]  637 	movx	a,@dptr
      000098 FB               [12]  638 	mov	r3,a
      000099 90r00r02         [24]  639 	mov	dptr,#_get_number_num_65536_47
      00009C EC               [12]  640 	mov	a,r4
      00009D 2A               [12]  641 	add	a,r2
      00009E F0               [24]  642 	movx	@dptr,a
      00009F ED               [12]  643 	mov	a,r5
      0000A0 3B               [12]  644 	addc	a,r3
      0000A1 A3               [24]  645 	inc	dptr
      0000A2 F0               [24]  646 	movx	@dptr,a
      0000A3 80 19            [24]  647 	sjmp	00108$
      0000A5                        648 00102$:
                                    649 ;	getput.c:27: printf("ERR,Numbers ONLY!\n\r");
      0000A5 74r00            [12]  650 	mov	a,#___str_0
      0000A7 C0 E0            [24]  651 	push	acc
      0000A9 74s00            [12]  652 	mov	a,#(___str_0 >> 8)
      0000AB C0 E0            [24]  653 	push	acc
      0000AD 74 80            [12]  654 	mov	a,#0x80
      0000AF C0 E0            [24]  655 	push	acc
      0000B1 12r00r00         [24]  656 	lcall	_printf
      0000B4 15 81            [12]  657 	dec	sp
      0000B6 15 81            [12]  658 	dec	sp
      0000B8 15 81            [12]  659 	dec	sp
                                    660 ;	getput.c:28: return -1;
      0000BA 90 FF FF         [24]  661 	mov	dptr,#0xffff
      0000BD 22               [24]  662 	ret
      0000BE                        663 00108$:
                                    664 ;	getput.c:17: for (int i = total_chars; i > 0; i--)
      0000BE 1E               [12]  665 	dec	r6
      0000BF BE FF 01         [24]  666 	cjne	r6,#0xff,00130$
      0000C2 1F               [12]  667 	dec	r7
      0000C3                        668 00130$:
      0000C3 02r00r1A         [24]  669 	ljmp	00107$
      0000C6                        670 00105$:
                                    671 ;	getput.c:31: return num;
      0000C6 90r00r02         [24]  672 	mov	dptr,#_get_number_num_65536_47
      0000C9 E0               [24]  673 	movx	a,@dptr
      0000CA FE               [12]  674 	mov	r6,a
      0000CB A3               [24]  675 	inc	dptr
      0000CC E0               [24]  676 	movx	a,@dptr
                                    677 ;	getput.c:32: }
      0000CD 8E 82            [24]  678 	mov	dpl,r6
      0000CF F5 83            [12]  679 	mov	dph,a
      0000D1 22               [24]  680 	ret
                                    681 ;------------------------------------------------------------
                                    682 ;Allocation info for local variables in function 'get_num_helper'
                                    683 ;------------------------------------------------------------
                                    684 ;times                     Allocated with name '_get_num_helper_times_65536_52'
                                    685 ;num                       Allocated with name '_get_num_helper_num_65536_53'
                                    686 ;i                         Allocated with name '_get_num_helper_i_131072_54'
                                    687 ;------------------------------------------------------------
                                    688 ;	getput.c:39: int get_num_helper(int times)
                                    689 ;	-----------------------------------------
                                    690 ;	 function get_num_helper
                                    691 ;	-----------------------------------------
      0000D2                        692 _get_num_helper:
      0000D2 AF 83            [24]  693 	mov	r7,dph
      0000D4 E5 82            [12]  694 	mov	a,dpl
      0000D6 90r00r04         [24]  695 	mov	dptr,#_get_num_helper_times_65536_52
      0000D9 F0               [24]  696 	movx	@dptr,a
      0000DA EF               [12]  697 	mov	a,r7
      0000DB A3               [24]  698 	inc	dptr
      0000DC F0               [24]  699 	movx	@dptr,a
                                    700 ;	getput.c:41: int num = 1;
      0000DD 90r00r06         [24]  701 	mov	dptr,#_get_num_helper_num_65536_53
      0000E0 74 01            [12]  702 	mov	a,#0x01
      0000E2 F0               [24]  703 	movx	@dptr,a
      0000E3 E4               [12]  704 	clr	a
      0000E4 A3               [24]  705 	inc	dptr
      0000E5 F0               [24]  706 	movx	@dptr,a
                                    707 ;	getput.c:43: for (int i = 0; i < times; i++)
      0000E6 90r00r04         [24]  708 	mov	dptr,#_get_num_helper_times_65536_52
      0000E9 E0               [24]  709 	movx	a,@dptr
      0000EA FE               [12]  710 	mov	r6,a
      0000EB A3               [24]  711 	inc	dptr
      0000EC E0               [24]  712 	movx	a,@dptr
      0000ED FF               [12]  713 	mov	r7,a
      0000EE 7C 00            [12]  714 	mov	r4,#0x00
      0000F0 7D 00            [12]  715 	mov	r5,#0x00
      0000F2                        716 00106$:
      0000F2 C3               [12]  717 	clr	c
      0000F3 EC               [12]  718 	mov	a,r4
      0000F4 9E               [12]  719 	subb	a,r6
      0000F5 ED               [12]  720 	mov	a,r5
      0000F6 64 80            [12]  721 	xrl	a,#0x80
      0000F8 8F F0            [24]  722 	mov	b,r7
      0000FA 63 F0 80         [24]  723 	xrl	b,#0x80
      0000FD 95 F0            [12]  724 	subb	a,b
      0000FF 50 3A            [24]  725 	jnc	00101$
                                    726 ;	getput.c:45: num = num * 10;
      000101 90r00r06         [24]  727 	mov	dptr,#_get_num_helper_num_65536_53
      000104 E0               [24]  728 	movx	a,@dptr
      000105 FA               [12]  729 	mov	r2,a
      000106 A3               [24]  730 	inc	dptr
      000107 E0               [24]  731 	movx	a,@dptr
      000108 FB               [12]  732 	mov	r3,a
      000109 90r00r00         [24]  733 	mov	dptr,#__mulint_PARM_2
      00010C EA               [12]  734 	mov	a,r2
      00010D F0               [24]  735 	movx	@dptr,a
      00010E EB               [12]  736 	mov	a,r3
      00010F A3               [24]  737 	inc	dptr
      000110 F0               [24]  738 	movx	@dptr,a
      000111 90 00 0A         [24]  739 	mov	dptr,#0x000a
      000114 C0 07            [24]  740 	push	ar7
      000116 C0 06            [24]  741 	push	ar6
      000118 C0 05            [24]  742 	push	ar5
      00011A C0 04            [24]  743 	push	ar4
      00011C 12r00r00         [24]  744 	lcall	__mulint
      00011F E5 82            [12]  745 	mov	a,dpl
      000121 85 83 F0         [24]  746 	mov	b,dph
      000124 D0 04            [24]  747 	pop	ar4
      000126 D0 05            [24]  748 	pop	ar5
      000128 D0 06            [24]  749 	pop	ar6
      00012A D0 07            [24]  750 	pop	ar7
      00012C 90r00r06         [24]  751 	mov	dptr,#_get_num_helper_num_65536_53
      00012F F0               [24]  752 	movx	@dptr,a
      000130 E5 F0            [12]  753 	mov	a,b
      000132 A3               [24]  754 	inc	dptr
      000133 F0               [24]  755 	movx	@dptr,a
                                    756 ;	getput.c:43: for (int i = 0; i < times; i++)
      000134 0C               [12]  757 	inc	r4
      000135 BC 00 BA         [24]  758 	cjne	r4,#0x00,00106$
      000138 0D               [12]  759 	inc	r5
      000139 80 B7            [24]  760 	sjmp	00106$
      00013B                        761 00101$:
                                    762 ;	getput.c:47: if (times == 0)
      00013B EE               [12]  763 	mov	a,r6
      00013C 4F               [12]  764 	orl	a,r7
      00013D 70 04            [24]  765 	jnz	00103$
                                    766 ;	getput.c:48: return 1;
      00013F 90 00 01         [24]  767 	mov	dptr,#0x0001
      000142 22               [24]  768 	ret
      000143                        769 00103$:
                                    770 ;	getput.c:50: return num;
      000143 90r00r06         [24]  771 	mov	dptr,#_get_num_helper_num_65536_53
      000146 E0               [24]  772 	movx	a,@dptr
      000147 FE               [12]  773 	mov	r6,a
      000148 A3               [24]  774 	inc	dptr
      000149 E0               [24]  775 	movx	a,@dptr
                                    776 ;	getput.c:51: }
      00014A 8E 82            [24]  777 	mov	dpl,r6
      00014C F5 83            [12]  778 	mov	dph,a
      00014E 22               [24]  779 	ret
                                    780 ;------------------------------------------------------------
                                    781 ;Allocation info for local variables in function 'putchar'
                                    782 ;------------------------------------------------------------
                                    783 ;c                         Allocated with name '_putchar_c_65536_56'
                                    784 ;------------------------------------------------------------
                                    785 ;	getput.c:60: int putchar(int c)
                                    786 ;	-----------------------------------------
                                    787 ;	 function putchar
                                    788 ;	-----------------------------------------
      00014F                        789 _putchar:
      00014F AF 83            [24]  790 	mov	r7,dph
      000151 E5 82            [12]  791 	mov	a,dpl
      000153 90r00r08         [24]  792 	mov	dptr,#_putchar_c_65536_56
      000156 F0               [24]  793 	movx	@dptr,a
      000157 EF               [12]  794 	mov	a,r7
      000158 A3               [24]  795 	inc	dptr
      000159 F0               [24]  796 	movx	@dptr,a
                                    797 ;	getput.c:62: while ((SCON & 0x02) == 0)
      00015A                        798 00101$:
      00015A E5 98            [12]  799 	mov	a,_SCON
      00015C 30 E1 FB         [24]  800 	jnb	acc.1,00101$
                                    801 ;	getput.c:64: TI = 0;
                                    802 ;	assignBit
      00015F C2 99            [12]  803 	clr	_TI
                                    804 ;	getput.c:65: SBUF = c;
      000161 90r00r08         [24]  805 	mov	dptr,#_putchar_c_65536_56
      000164 E0               [24]  806 	movx	a,@dptr
      000165 FE               [12]  807 	mov	r6,a
      000166 A3               [24]  808 	inc	dptr
      000167 E0               [24]  809 	movx	a,@dptr
      000168 8E 99            [24]  810 	mov	_SBUF,r6
                                    811 ;	getput.c:66: return 0;
      00016A 90 00 00         [24]  812 	mov	dptr,#0x0000
                                    813 ;	getput.c:67: }
      00016D 22               [24]  814 	ret
                                    815 ;------------------------------------------------------------
                                    816 ;Allocation info for local variables in function 'getchar'
                                    817 ;------------------------------------------------------------
                                    818 ;	getput.c:74: int getchar()
                                    819 ;	-----------------------------------------
                                    820 ;	 function getchar
                                    821 ;	-----------------------------------------
      00016E                        822 _getchar:
                                    823 ;	getput.c:76: while (RI == 0)
      00016E                        824 00101$:
                                    825 ;	getput.c:78: RI = 0;
                                    826 ;	assignBit
      00016E 10 98 02         [24]  827 	jbc	_RI,00140$
      000171 80 FB            [24]  828 	sjmp	00101$
      000173                        829 00140$:
                                    830 ;	getput.c:80: if (SBUF != 0x3F && SBUF != 0x3D && SBUF != 0x40 && SBUF != 0x2B && SBUF != 0x2D)
      000173 74 3F            [12]  831 	mov	a,#0x3f
      000175 B5 99 02         [24]  832 	cjne	a,_SBUF,00141$
      000178 80 27            [24]  833 	sjmp	00105$
      00017A                        834 00141$:
      00017A 74 3D            [12]  835 	mov	a,#0x3d
      00017C B5 99 02         [24]  836 	cjne	a,_SBUF,00142$
      00017F 80 20            [24]  837 	sjmp	00105$
      000181                        838 00142$:
      000181 74 40            [12]  839 	mov	a,#0x40
      000183 B5 99 02         [24]  840 	cjne	a,_SBUF,00143$
      000186 80 19            [24]  841 	sjmp	00105$
      000188                        842 00143$:
      000188 74 2B            [12]  843 	mov	a,#0x2b
      00018A B5 99 02         [24]  844 	cjne	a,_SBUF,00144$
      00018D 80 12            [24]  845 	sjmp	00105$
      00018F                        846 00144$:
      00018F 74 2D            [12]  847 	mov	a,#0x2d
      000191 B5 99 02         [24]  848 	cjne	a,_SBUF,00145$
      000194 80 0B            [24]  849 	sjmp	00105$
      000196                        850 00145$:
                                    851 ;	getput.c:81: putchar(SBUF);
      000196 AE 99            [24]  852 	mov	r6,_SBUF
      000198 7F 00            [12]  853 	mov	r7,#0x00
      00019A 8E 82            [24]  854 	mov	dpl,r6
      00019C 8F 83            [24]  855 	mov	dph,r7
      00019E 12r01r4F         [24]  856 	lcall	_putchar
      0001A1                        857 00105$:
                                    858 ;	getput.c:82: return SBUF;
      0001A1 AE 99            [24]  859 	mov	r6,_SBUF
      0001A3 7F 00            [12]  860 	mov	r7,#0x00
      0001A5 8E 82            [24]  861 	mov	dpl,r6
      0001A7 8F 83            [24]  862 	mov	dph,r7
                                    863 ;	getput.c:83: }
      0001A9 22               [24]  864 	ret
                                    865 	.area CSEG    (CODE)
                                    866 	.area CONST   (CODE)
                                    867 	.area CONST   (CODE)
      000000                        868 ___str_0:
      000000 45 52 52 2C 4E 75 6D   869 	.ascii "ERR,Numbers ONLY!"
             62 65 72 73 20 4F 4E
             4C 59 21
      000011 0A                     870 	.db 0x0a
      000012 0D                     871 	.db 0x0d
      000013 00                     872 	.db 0x00
                                    873 	.area CSEG    (CODE)
                                    874 	.area XINIT   (CODE)
                                    875 	.area CABS    (ABS,CODE)
